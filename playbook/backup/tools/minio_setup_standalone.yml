---
# minio_setup_standalone.yml - Standalone version of minio_setup.yml

- name: Configure Minio S3 storage
  hosts: localhost
  gather_facts: no
  vars:
    client_hosts_group: "hot_nodes"  # Set this to your target group
    selected_service: "minio"  # Added to fix the undefined variable error
  tasks:
    - name: Set default variables
      set_fact:
        minio_client_version: "latest"
        minio_server_version: "latest"
        minio_client_url: "https://dl.min.io/client/mc/release/linux-amd64/mc"
        minio_server_url: "https://dl.min.io/server/minio/release/linux-amd64/minio"
        installation_method: "online"  # Default to online installation
        client_hosts: "{{ groups[client_hosts_group] }}"
        server_host: ""
        minio_access_key: "minioadmin"  # Default access key
        minio_secret_key: "minioadmin"  # Default secret key
        minio_keystore_name: "default"  # Default keystore client name
        minio_bucket_name: "elasticsearch-snapshots"  # Default bucket name
        minio_region: "us-east-1"  # Default region
        minio_data_dir: "/minio/data"
        minio_port: "9000"
        minio_console_port: "9001"
        minio_protocol: "http"  # Default protocol
        install_server: false
        
    # We'll default to online installation for automated run
    - name: Set installation method
      set_fact:
        installation_method: "online"

    # For automated run, default to the first host in hot_nodes as server
    - name: Get first hot node for server
      set_fact:
        server_host: "{{ client_hosts[0] }}"
        install_server: true
        
    - name: Set default server values
      set_fact:
        minio_server_host: "{{ server_host }}"
        install_server: true

    # For automated run, use default credentials
    - name: Set default Minio credentials
      set_fact:
        minio_access_key: "minioadmin"
        minio_secret_key: "minioadmin"

    - name: Create pre-installation report
      copy:
        content: |
          Minio Installation Plan
          ======================
          Installation Method: {{ installation_method | title }}
          
          Minio Client Installation:
          ------------------------
          Target Hosts: {{ client_hosts | join(', ') }}
          
          {% if install_server | default(false) %}
          Minio Server Installation:
          ------------------------
          Server Host: {{ server_host }}
          Server Data Directory: {{ minio_data_dir }}
          Server Port: {{ minio_port }}
          Console Port: {{ minio_console_port }}
          {% else %}
          External Minio Server:
          -------------------
          Server Host: {{ minio_server_host | default('Not configured') }}
          Server Port: {{ minio_port }}
          Protocol: {{ minio_protocol }}
          {% endif %}
          
          Minio Credentials:
          ----------------
          Access Key: {{ minio_access_key }}
          Secret Key: {{ minio_secret_key }}
        dest: "/tmp/minio_install_plan.txt"

    - name: Display installation plan
      debug:
        msg: "{{ lookup('file', '/tmp/minio_install_plan.txt') | split('\n') }}"

# Install Minio Client on target hosts
- name: Install Minio client
  hosts: "{{ hostvars['localhost']['client_hosts'] }}"
  become: yes
  tasks:
    - name: Create directory for Minio client
      file:
        path: /usr/local/bin
        state: directory
        mode: '0755'
      
    - name: Install Minio client - online
      get_url:
        url: "{{ hostvars['localhost']['minio_client_url'] }}"
        dest: /usr/local/bin/mc
        mode: '0755'
      when: hostvars['localhost']['installation_method'] == 'online'
      
    - name: Install Minio client - offline
      copy:
        src: "{{ hostvars['localhost']['mc_binary_path'] }}"
        dest: /usr/local/bin/mc
        mode: '0755'
      when: hostvars['localhost']['installation_method'] == 'offline'
      
    - name: Verify Minio client installation
      command: /usr/local/bin/mc --version
      register: mc_version
      changed_when: false
      
    - name: Display Minio client version
      debug:
        msg: "Minio client installed: {{ mc_version.stdout }}"

# Install Minio Server if requested
- name: Install Minio server
  hosts: "{{ hostvars['localhost']['server_host'] }}"
  become: yes
  tasks:
    - name: Create directories for Minio server
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /usr/local/bin
        - "{{ hostvars['localhost']['minio_data_dir'] }}"
        - /etc/minio
      when: hostvars['localhost']['install_server'] | default(false)
      
    - name: Install Minio server - online
      get_url:
        url: "{{ hostvars['localhost']['minio_server_url'] }}"
        dest: /usr/local/bin/minio
        mode: '0755'
      when: hostvars['localhost']['installation_method'] == 'online' and hostvars['localhost']['install_server'] | default(false)
      
    - name: Install Minio server - offline
      copy:
        src: "{{ hostvars['localhost']['minio_binary_path'] }}"
        dest: /usr/local/bin/minio
        mode: '0755'
      when: hostvars['localhost']['installation_method'] == 'offline' and hostvars['localhost']['install_server'] | default(false)
      
    - name: Create Minio environment file
      copy:
        content: |
          # Minio configuration
          MINIO_ROOT_USER={{ hostvars['localhost']['minio_access_key'] }}
          MINIO_ROOT_PASSWORD={{ hostvars['localhost']['minio_secret_key'] }}
          MINIO_VOLUMES={{ hostvars['localhost']['minio_data_dir'] }}
        dest: /etc/minio/minio.env
        mode: '0600'
      when: hostvars['localhost']['install_server'] | default(false)
      
    - name: Create Minio systemd service
      copy:
        content: |
          [Unit]
          Description=MinIO
          Documentation=https://docs.min.io
          Wants=network-online.target
          After=network-online.target
          AssertFileIsExecutable=/usr/local/bin/minio

          [Service]
          WorkingDirectory=/usr/local/
          EnvironmentFile=/etc/minio/minio.env
          User=root
          Group=root
          ExecStartPre=/bin/bash -c "if [ -z \"${MINIO_VOLUMES}\" ]; then echo \"Variable MINIO_VOLUMES not set in /etc/minio/minio.env\"; exit 1; fi"
          ExecStart=/usr/local/bin/minio server --console-address :{{ hostvars['localhost']['minio_console_port'] }} --address :{{ hostvars['localhost']['minio_port'] }} $MINIO_OPTS
          Restart=always
          LimitNOFILE=65536
          TasksMax=infinity
          TimeoutStopSec=infinity
          SendSIGKILL=no

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/minio.service
        mode: '0644'
      when: hostvars['localhost']['install_server'] | default(false)
      
    - name: Start and enable Minio service
      systemd:
        name: minio
        state: started
        enabled: yes
        daemon_reload: yes
      when: hostvars['localhost']['install_server'] | default(false)
      
    - name: Wait for Minio server to start
      wait_for:
        host: "127.0.0.1"
        port: "{{ hostvars['localhost']['minio_port'] }}"
        timeout: 60
      when: hostvars['localhost']['install_server'] | default(false)

# Configure Minio client on all client hosts
- name: Configure Minio client
  hosts: "{{ hostvars['localhost']['client_hosts'] }}"
  become: yes
  tasks:
    - name: Get server IP address
      set_fact:
        # Use the real IP address from hostvars inventory
        minio_server_ip: "{{ hostvars[hostvars['localhost']['server_host']]['ansible_host'] }}"
      
    - name: Configure Minio client
      shell: |
        /usr/local/bin/mc config host add minio {{ hostvars['localhost']['minio_protocol'] }}://{{ minio_server_ip }}:{{ hostvars['localhost']['minio_port'] }} {{ hostvars['localhost']['minio_access_key'] }} {{ hostvars['localhost']['minio_secret_key'] }}
      register: mc_config
      changed_when: true
      
    - name: Verify Minio client configuration
      shell: /usr/local/bin/mc ls minio
      register: mc_ls
      changed_when: false
      ignore_errors: yes
      
    - name: Display Minio bucket listing
      debug:
        msg: "{{ mc_ls.stdout_lines if mc_ls.stdout_lines | default([]) else 'No buckets found or connection error' }}"
      ignore_errors: yes

# Generate final report
- name: Create final report
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Generate installation report
      debug:
        msg: |
          Minio S3 Storage Installation Report
          ==================================
          
          Installation Status:
          -----------------
          Minio Client Installed on: {{ client_hosts | join(', ') }}
          
          {% if install_server | default(false) %}
          Minio Server:
          ------------
          Installed on: {{ server_host }}
          Service Status: Running (if no errors were reported)
          Endpoint: {{ minio_protocol }}://{{ server_host }}:{{ minio_port }}
          Console: {{ minio_protocol }}://{{ server_host }}:{{ minio_console_port }}
          {% else %}
          External Minio Server:
          -------------------
          Endpoint: {{ minio_protocol }}://{{ minio_server_host | default('Not configured') }}:{{ minio_port }}
          {% endif %}
          
          Access Details:
          -------------
          Access Key: {{ minio_access_key }}
          Secret Key: {{ minio_secret_key }}

    - name: Cleanup temporary files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/minio_install_plan.txt"
      ignore_errors: yes