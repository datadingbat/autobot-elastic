---
- name: Install and Configure Standalone Elastic
  hosts: all
  become: yes
  vars:
    elastic_password_file: "{{ lookup('env', 'HOME') }}/.elasticsearch/elastic_password.txt"
    elastic_password: "{{ lookup('file', elastic_password_file) }}"
    first_master: "{{ groups['master_nodes'][0] }}"
    cert_files:
      - elastic-http-ca.pem
      - elastic-http-ca.crt
      - elastic-http.key
      - elastic-http.pem
      - elastic-http.p12
      - elastic-certificates.p12

  tasks:
    - name: Install Elastic from apt repository
      apt:
        name: elasticsearch=8.15.4
        state: present
        update_cache: yes
        update_cache: yes
      become_method: sudo
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Wait for package installation to settle
      wait_for:
        timeout: 10

    - name: Set certificate password fact
      set_fact:
        es_cert_pass: "elastic2024"

    - name: Fetch certificates from first master node
      ansible.builtin.fetch:
        src: "/etc/elasticsearch/certs/{{ item }}"
        dest: "/tmp/elastic-certs/{{ item }}"
        flat: yes
      with_items: "{{ cert_files }}"
      run_once: true
      delegate_to: "{{ first_master }}"

    - name: Copy certificates to Elastic
      copy:
        src: "/tmp/elastic-certs/{{ item }}"
        dest: "/etc/elasticsearch/certs/{{ item }}"
        mode: '0644'
      with_items: "{{ cert_files }}"

    - name: Set certificate permissions
      file:
        path: "{{ item }}"
        owner: root
        group: elasticsearch
        mode: '0660'
      with_items:
        # - "/etc/elasticsearch/certs/elastic-stack-ca.p12"
        # - "/etc/elasticsearch/certs/elastic-http-ca.p12"
        - "/etc/elasticsearch/certs/elastic-certificates.p12" 
        - "/etc/elasticsearch/certs/elastic-http-ca.pem"
        - "/etc/elasticsearch/certs/elastic-http.p12"

    - name: Update transport SSL passwords in keystore
      shell: |
       echo "{{ es_cert_pass }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add -f xpack.security.transport.ssl.keystore.secure_password
       echo "{{ es_cert_pass }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add -f xpack.security.transport.ssl.truststore.secure_password    
       echo "{{ es_cert_pass }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add -f xpack.security.http.ssl.keystore.secure_password
       echo "{{ es_cert_pass }}" | /usr/share/elasticsearch/bin/elasticsearch-keystore add -f xpack.security.http.ssl.truststore.secure_password

    - name: Create initial elasticsearch settings
      copy:
        dest: /etc/elasticsearch/elasticsearch.yml
        content: |
          # Elasticsearch configuration
          path.data: /var/lib/elasticsearch
          path.logs: /var/log/elasticsearch

          # Prevent heap memory from being swapped out
          bootstrap.memory_lock: true
          
          # Cluster name
          cluster.name: monitoring-cluster
          discovery.type: single-node

          # Node configuration
          node.name: {{ hostvars[inventory_hostname]['ansible_host'] }}
          network.host: {{ ansible_host }}  
          node.roles: [master, data, ingest, ml, remote_cluster_client]

          xpack.monitoring.collection.enabled: true

          # Security settings
          xpack.security.enabled: true
          xpack.security.enrollment.enabled: true

          # HTTP SSL Configuration
          xpack.security.http.ssl:
            enabled: true
            keystore.path: /etc/elasticsearch/certs/elastic-http.p12
            truststore.path: /etc/elasticsearch/certs/elastic-http.p12
            verification_mode: certificate 
            client_authentication: optional
            
          # Transport SSL Configuration
          xpack.security.transport.ssl:
            enabled: true
            verification_mode: certificate
            keystore.path: /etc/elasticsearch/certs/elastic-certificates.p12
            truststore.path: /etc/elasticsearch/certs/elastic-certificates.p12
            client_authentication: optional

          # Network settings
          transport.host: 0.0.0.0
          transport.port: 9300
          http.port: 9200
        owner: elasticsearch
        group: elasticsearch
        mode: '0660'

    - name: Start Elasticsearch service on Standalone Instance 
      systemd:
        name: elasticsearch
        state: started
        enabled: yes
        daemon_reload: yes
      
    - name: Wait for Elasticsearch to start
      wait_for:
        timeout: 15

    - name: Reset elastic user password
      expect:
        command: "/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -b -s -i"
        responses:
          "Enter password for \\[elastic\\]:": "{{ lookup('file', lookup('env', 'HOME') + '/.elasticsearch/elastic_password.txt') | trim }}\n"
          "Re-enter password for \\[elastic\\]:": "{{ lookup('file', lookup('env', 'HOME') + '/.elasticsearch/elastic_password.txt') | trim }}\n"
        timeout: 30
          
    - name: Create metrics_viewer role
      uri:
        url: "https://{{ hostvars[inventory_hostname]['ansible_host'] }}:9200/_security/role/metrics_viewer"
        method: PUT
        body_format: json
        body: |
          {
            "indices": [
              {
                "names": ["metrics-*"],
                "privileges": ["read", "read_cross_cluster", "view_index_metadata"]
              },
              {
                "names": [".monitoring-*"],
                "privileges": ["read", "read_cross_cluster"]
              }
            ]
          }
        user: "elastic"
        password: "{{ lookup('file', lookup('env', 'HOME') + '/.elasticsearch/elastic_password.txt') | trim }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200, 201]
        headers:
          Content-Type: "application/json"

    - name: Create kibana_monitoring user
      uri:
        url: "https://{{ hostvars[inventory_hostname]['ansible_host'] }}:9200/_security/user/kibana_monitoring"
        method: PUT
        body_format: json
        body: |
          {
            "password": "elastic2024",
            "roles": ["monitoring_user", "metrics_viewer"],
            "full_name": "Kibana Monitoring User",
            "email": "monitoring@your-domain.com"
          }
        user: "elastic"
        password: "{{ lookup('file', lookup('env', 'HOME') + '/.elasticsearch/elastic_password.txt') | trim }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200, 201]
        headers:
          Content-Type: "application/json"
